{"ast":null,"code":"var _jsxFileName = \"/Users/swosti/Desktop/strapreact/react-reduction/react-frontend/src/components/form.jsx\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, InputGroup, InputGroupAddon, DropdownItem, DropdownMenu, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, Label, Row, Table } from 'reactstrap'; // feature: save test settings in json file\n\nclass FormPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layer: props ? props.layer : 'Routing',\n      testType: props ? props.testType : 'Agent to Server',\n      testName: '',\n      testDesc: '',\n      targetIP: '',\n      protocol: props ? props.protocol : 'TCP'\n    }; // this.setDefaultSelections();\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleReset() {\n    const {\n      layer,\n      testType,\n      protocol\n    } = this.props;\n    const testName = ' ';\n    const testDesc = ' ';\n    const targetIP = ' ';\n    const inputs = document.querySelectorAll('input');\n    console.log(inputs);\n    inputs.forEach(item => {\n      item.style.backgroundColor = '#FFFFFF';\n      item.reset();\n      console.log(item);\n    });\n    this.setState({\n      layer,\n      testType,\n      testName,\n      testDesc,\n      targetIP,\n      protocol\n    });\n  }\n\n  handleClick(e) {\n    const className = e.target.className;\n    const inputs = document.querySelectorAll(`.${className}`);\n    inputs.forEach(item => {\n      item.style.backgroundColor = '#FFFFFF';\n    });\n    e.target.style.backgroundColor = '#45b6fe';\n\n    if (className === 'layer-class') {\n      const layer = e.target.value;\n      console.log(layer);\n      this.setState({\n        layer\n      });\n    } else if (className === 'test-type-class') {\n      const testType = e.target.value;\n      console.log(testType);\n      this.setState({\n        testType\n      });\n    } else if (className === 'protocol-class') {\n      const protocol = e.target.value;\n      console.log(protocol);\n      this.setState({\n        protocol\n      });\n    }\n  }\n\n  handleChange(e) {\n    const className = e.target.className.split(' ')[0]; // console.log(className);\n\n    const input = document.querySelectorAll(`.${className}`); // input[0].style.backgroundColor = \"green\";\n\n    console.log(e.target.value);\n\n    if (className === 'test-name-class') {\n      const testName = e.target.value;\n      this.setState({\n        testName\n      });\n    } else if (className === 'test-desc-class') {\n      const testDesc = e.target.value;\n      this.setState({\n        testDesc\n      });\n    } else if (className === 'target-class') {\n      const targetIP = e.target.value;\n      this.setState({\n        targetIP\n      });\n    } // console.log(e.target.innerText);\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"NewTest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, \"New Test\"), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"new-test-class\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, 'Layer........', /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"Routing\",\n      name: \"Routing\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"Network\",\n      name: \"Network\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"DNS\",\n      name: \"DNS\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"DNS+\",\n      name: \"DNS+\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"Web\",\n      name: \"Web\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"voice\",\n      name: \"Voice\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), 'Test Type ', /*#__PURE__*/React.createElement(\"input\", {\n      className: \"test-type-class\",\n      type: \"button\",\n      value: \"Agent to Server\",\n      name: \"Agent-to-Server\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"test-type-class\",\n      type: \"button\",\n      value: \"Agent to Agent\",\n      name: \"Agent-to-Agent\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Test Name\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"test-name-class\",\n      type: \"textarea\",\n      name: \"test-name\",\n      placeholder: \"Optional\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, \"Text Description\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"test-desc-class\",\n      type: \"textarea\",\n      name: \"test-desc\",\n      placeholder: \"Optional\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"FormInputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, \"Form Inputs\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, \"Layer : \", /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, this.state.layer), \"Test Type :\", /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, this.state.testType), \"Test Name :\", /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, this.state.testName), \"Test Description :\", /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, this.state.testDesc), \"Target IP :\", /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, this.state.targetIP), \"Protocol :\", /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, this.state.protocol))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"BasicConfig\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, \"Basic Configuration\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      size: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, \"Target\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"target-class\",\n      placeholder: \"e.g. google.com or 192.168.0.1\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }, \"Protocol\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"protocol-class\",\n      type: \"button\",\n      value: \"TCP\",\n      name: \"TCP\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"protocol-class\",\n      type: \"button\",\n      value: \"UDP\",\n      name: \"UDP\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"protocol-class\",\n      type: \"button\",\n      value: \"ICMP\",\n      name: \"ICMP\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"AgentInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, \"Agent Information\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 23\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 23\n      }\n    }, \"Agent Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 23\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 23\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }\n    }, \"marco\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 23\n      }\n    }, \"Inactive\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 23\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 23\n      }\n    }, \"Polo\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 23\n      }\n    }, \"Inactive\")))))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"reset-class\",\n      type: \"button\",\n      value: \"RESET\",\n      name: \"reset\",\n      onClick: this.handleReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default FormPage;","map":{"version":3,"sources":["/Users/swosti/Desktop/strapreact/react-reduction/react-frontend/src/components/form.jsx"],"names":["React","Component","Button","ButtonGroup","InputGroup","InputGroupAddon","DropdownItem","DropdownMenu","Card","CardBody","CardHeader","Col","Form","FormGroup","Input","Label","Row","Table","FormPage","constructor","props","state","layer","testType","testName","testDesc","targetIP","protocol","handleClick","bind","handleChange","handleReset","inputs","document","querySelectorAll","console","log","forEach","item","style","backgroundColor","reset","setState","e","className","target","value","split","input","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  InputGroup,\n  InputGroupAddon,\n  DropdownItem,\n  DropdownMenu,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Table,\n} from 'reactstrap';\n// feature: save test settings in json file\nclass FormPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layer: props ? props.layer : 'Routing',\n      testType: props ? props.testType : 'Agent to Server',\n      testName: '',\n      testDesc: '',\n      targetIP: '',\n      protocol: props ? props.protocol : 'TCP',\n    };\n    // this.setDefaultSelections();\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleReset() {\n    const { layer, testType, protocol } = this.props;\n    const testName = ' ';\n    const testDesc = ' ';\n    const targetIP = ' ';\n\n    const inputs = document.querySelectorAll('input');\n    console.log(inputs);\n    inputs.forEach(item => {\n      item.style.backgroundColor = '#FFFFFF';\n      item.reset();\n      console.log(item);\n    });\n    this.setState({ layer, testType, testName, testDesc, targetIP, protocol });\n  }\n\n  handleClick(e) {\n    const className = e.target.className;\n    const inputs = document.querySelectorAll(`.${className}`);\n    inputs.forEach(item => {\n      item.style.backgroundColor = '#FFFFFF';\n    });\n    e.target.style.backgroundColor = '#45b6fe';\n\n    if (className === 'layer-class') {\n      const layer = e.target.value;\n      console.log(layer);\n      this.setState({ layer });\n    } else if (className === 'test-type-class') {\n      const testType = e.target.value;\n      console.log(testType);\n      this.setState({ testType });\n    } else if (className === 'protocol-class') {\n      const protocol = e.target.value;\n      console.log(protocol);\n      this.setState({ protocol });\n    }\n  }\n\n  handleChange(e) {\n    const className = e.target.className.split(' ')[0];\n    // console.log(className);\n    const input = document.querySelectorAll(`.${className}`);\n    // input[0].style.backgroundColor = \"green\";\n    console.log(e.target.value);\n    if (className === 'test-name-class') {\n      const testName = e.target.value;\n      this.setState({ testName });\n    } else if (className === 'test-desc-class') {\n      const testDesc = e.target.value;\n      this.setState({ testDesc });\n    } else if (className === 'target-class') {\n      const targetIP = e.target.value;\n      this.setState({ targetIP });\n    }\n    // console.log(e.target.innerText);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Row>\n          <Col xl={6} lg={12} md={12}>\n            <Card id=\"NewTest\">\n              <CardHeader>New Test</CardHeader>\n              <CardBody className=\"new-test-class\">\n                {'Layer........'}\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"Routing\"\n                  name=\"Routing\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"Network\"\n                  name=\"Network\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"DNS\"\n                  name=\"DNS\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"DNS+\"\n                  name=\"DNS+\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"Web\"\n                  name=\"Web\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"voice\"\n                  name=\"Voice\"\n                  onClick={this.handleClick}\n                />\n                <br />\n                <br />\n                {'Test Type '}\n                <input\n                  className=\"test-type-class\"\n                  type=\"button\"\n                  value=\"Agent to Server\"\n                  name=\"Agent-to-Server\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"test-type-class\"\n                  type=\"button\"\n                  value=\"Agent to Agent\"\n                  name=\"Agent-to-Agent\"\n                  onClick={this.handleClick}\n                />\n                <br />\n                <br />\n                <Form>\n                  <FormGroup>\n                    <Label for=\"exampleText\">Test Name</Label>\n                    <Input\n                      className=\"test-name-class\"\n                      type=\"textarea\"\n                      name=\"test-name\"\n                      placeholder=\"Optional\"\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"exampleText\">Text Description</Label>\n                    <Input\n                      className=\"test-desc-class\"\n                      type=\"textarea\"\n                      name=\"test-desc\"\n                      placeholder=\"Optional\"\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xl={6} lg={12} md={12}>\n            <Card id=\"FormInputs\">\n              <CardHeader>Form Inputs</CardHeader>\n              <CardBody>\n                Layer : <h5 style={{ color: 'red' }}>{this.state.layer}</h5>\n                Test Type :\n                <h5 style={{ color: 'red' }}>{this.state.testType}</h5>\n                Test Name :\n                <h5 style={{ color: 'red' }}>{this.state.testName}</h5>\n                Test Description :\n                <h5 style={{ color: 'red' }}>{this.state.testDesc}</h5>\n                Target IP :\n                <h5 style={{ color: 'red' }}>{this.state.targetIP}</h5>\n                Protocol :\n                <h5 style={{ color: 'red' }}>{this.state.protocol}</h5>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xl={6} lg={12} md={12}>\n            <Card id=\"BasicConfig\">\n              <CardHeader>Basic Configuration</CardHeader>\n              <CardBody>\n                <InputGroup size=\"normal\">\n                  <InputGroupAddon addonType=\"prepend\">Target</InputGroupAddon>\n                  <Input\n                    className=\"target-class\"\n                    placeholder=\"e.g. google.com or 192.168.0.1\"\n                    onChange={this.handleChange}\n                  />\n                </InputGroup>\n                <br />\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">\n                    Protocol\n                  </InputGroupAddon>\n                  <input\n                    className=\"protocol-class\"\n                    type=\"button\"\n                    value=\"TCP\"\n                    name=\"TCP\"\n                    onClick={this.handleClick}\n                  />\n                  <input\n                    className=\"protocol-class\"\n                    type=\"button\"\n                    value=\"UDP\"\n                    name=\"UDP\"\n                    onClick={this.handleClick}\n                  />\n                  <input\n                    className=\"protocol-class\"\n                    type=\"button\"\n                    value=\"ICMP\"\n                    name=\"ICMP\"\n                    onClick={this.handleClick}\n                  />\n                  <br />\n                  <br />\n                </InputGroup>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xl={6} lg={12} md={12}>\n            <Card id=\"AgentInfo\">\n              <CardHeader>Agent Information</CardHeader>\n              <CardBody>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Agent Name</th>\n                      <th>Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">1</th>\n                      <td>marco</td>\n                      <td>Inactive</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2</th>\n                      <td>Polo</td>\n                      <td>Inactive</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xl={6} lg={12} md={12}>\n            {/* <Button\n              as=\"input\"\n              type=\"reset\"\n              value=\"Reset\"\n              onClick={this.handleReset}\n            /> */}\n            <input\n              className=\"reset-class\"\n              type=\"button\"\n              value=\"RESET\"\n              name=\"reset\"\n              onClick={this.handleReset}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FormPage;\n"]},"metadata":{},"sourceType":"module"}