{"ast":null,"code":"var _jsxFileName = \"/Users/swosti/Desktop/strapreact/full-form/src/components/form.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, ButtonGroup, InputGroup, InputGroupAddon, DropdownItem, DropdownMenu, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, Label, Row } from \"reactstrap\"; // feature: save test settings in json file\n\nclass FormPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layer: props ? props.layer : \"DNS\",\n      testType: props ? props.testType : \"Agent to Server\",\n      testName: \"\",\n      testDesc: \"\",\n      targetIP: \"\",\n      protocol: props ? props.protocol : \"TCP\"\n    }; // this.setDefaultSelections();\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick(e) {\n    const className = e.target.className;\n    const inputs = document.querySelectorAll(`.${className}`);\n    inputs.forEach(item => {\n      item.style.backgroundColor = \"#FFFFFF\";\n    });\n    e.target.style.backgroundColor = \"#45b6fe\";\n\n    if (className === \"layer-class\") {\n      const layer = e.target.value;\n      console.log(layer);\n      this.setState({\n        layer\n      });\n    } else if (className === \"test-type-class\") {\n      const testType = e.target.value;\n      console.log(testType);\n      this.setState({\n        testType\n      });\n    } else if (className === \"protocol-class\") {\n      const protocol = e.target.value;\n      console.log(protocol);\n      this.setState({\n        protocol\n      });\n    }\n  }\n\n  handleChange(e) {\n    const className = e.target.className.split(\" \")[0]; // console.log(className);\n\n    const input = document.querySelectorAll(`.${className}`); // input[0].style.backgroundColor = \"green\";\n\n    console.log(e.target.value);\n\n    if (className === \"test-name-class\") {\n      const testName = e.target.value;\n      this.setState({\n        testName\n      });\n    } else if (className === \"test-desc-class\") {\n      const testDesc = e.target.value;\n      this.setState({\n        testDesc\n      });\n    } else if (className === \"target-class\") {\n      const targetIP = e.target.value;\n      this.setState({\n        targetIP\n      });\n    } // console.log(e.target.innerText);\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"NewTest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"New Test\"), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"new-test-class\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Layer........\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"DNS\",\n      name: \"DNS\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"TCP\",\n      name: \"TCP\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"UDP\",\n      name: \"UDP\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), \"Test Type \", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"test-type-class\",\n      type: \"button\",\n      value: \"Agent to Server\",\n      name: \"Agent-to-Server\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"test-type-class\",\n      type: \"button\",\n      value: \"Agent to Agent\",\n      name: \"Agent-to-Agent\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Test Name\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"test-name-class\",\n      type: \"textarea\",\n      name: \"test-name\",\n      placeholder: \"Optional\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, \"Text Description\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"test-desc-class\",\n      type: \"textarea\",\n      name: \"test-desc\",\n      placeholder: \"Optional\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"FormInputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"Form Inputs\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, \"Layer : \", /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, this.state.layer), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }), \"Test Type :\", \" \", /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, this.state.testType), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }), \"Test Name :\", \" \", /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, this.state.testName), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), \"Test Description :\", \" \", /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, this.state.testDesc), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }), \"Target IP : \", this.state.targetIP, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }), \"Protocol : \", this.state.protocol)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"BasicConfig\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, \"Basic Configuration\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      size: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, \"Target\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"target-class\",\n      placeholder: \"e.g. google.com or 192.168.0.1\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, \"Protocol\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"protocol-class\",\n      type: \"button\",\n      value: \"TCP\",\n      name: \"TCP\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"protocol-class\",\n      type: \"button\",\n      value: \"UDP\",\n      name: \"UDP\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"protocol-class\",\n      type: \"button\",\n      value: \"ICMP\",\n      name: \"ICMP\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nexport default FormPage;","map":{"version":3,"sources":["/Users/swosti/Desktop/strapreact/full-form/src/components/form.jsx"],"names":["React","Component","Button","ButtonGroup","InputGroup","InputGroupAddon","DropdownItem","DropdownMenu","Card","CardBody","CardHeader","Col","Form","FormGroup","Input","Label","Row","FormPage","constructor","props","state","layer","testType","testName","testDesc","targetIP","protocol","handleClick","bind","handleChange","e","className","target","inputs","document","querySelectorAll","forEach","item","style","backgroundColor","value","console","log","setState","split","input","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  InputGroup,\n  InputGroupAddon,\n  DropdownItem,\n  DropdownMenu,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\n// feature: save test settings in json file\nclass FormPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layer: props ? props.layer : \"DNS\",\n      testType: props ? props.testType : \"Agent to Server\",\n      testName: \"\",\n      testDesc: \"\",\n      targetIP: \"\",\n      protocol: props ? props.protocol : \"TCP\",\n    };\n    // this.setDefaultSelections();\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick(e) {\n    const className = e.target.className;\n    const inputs = document.querySelectorAll(`.${className}`);\n    inputs.forEach((item) => {\n      item.style.backgroundColor = \"#FFFFFF\";\n    });\n    e.target.style.backgroundColor = \"#45b6fe\";\n\n    if (className === \"layer-class\") {\n      const layer = e.target.value;\n      console.log(layer);\n      this.setState({ layer });\n    } else if (className === \"test-type-class\") {\n      const testType = e.target.value;\n      console.log(testType);\n      this.setState({ testType });\n    } else if (className === \"protocol-class\") {\n      const protocol = e.target.value;\n      console.log(protocol);\n      this.setState({ protocol });\n    }\n  }\n\n  handleChange(e) {\n    const className = e.target.className.split(\" \")[0];\n    // console.log(className);\n    const input = document.querySelectorAll(`.${className}`);\n    // input[0].style.backgroundColor = \"green\";\n    console.log(e.target.value);\n    if (className === \"test-name-class\") {\n      const testName = e.target.value;\n      this.setState({ testName });\n    } else if (className === \"test-desc-class\") {\n      const testDesc = e.target.value;\n      this.setState({ testDesc });\n    } else if (className === \"target-class\") {\n      const targetIP = e.target.value;\n      this.setState({ targetIP });\n    }\n    // console.log(e.target.innerText);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Row>\n          <Col xl={6} lg={12} md={12}>\n            <Card id=\"NewTest\">\n              <CardHeader>New Test</CardHeader>\n              <CardBody className=\"new-test-class\">\n                {\"Layer........\"}\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"DNS\"\n                  name=\"DNS\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"TCP\"\n                  name=\"TCP\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"UDP\"\n                  name=\"UDP\"\n                  onClick={this.handleClick}\n                />\n                <br />\n                <br />\n                {\"Test Type \"}\n                <input\n                  className=\"test-type-class\"\n                  type=\"button\"\n                  value=\"Agent to Server\"\n                  name=\"Agent-to-Server\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"test-type-class\"\n                  type=\"button\"\n                  value=\"Agent to Agent\"\n                  name=\"Agent-to-Agent\"\n                  onClick={this.handleClick}\n                />\n                <br />\n                <br />\n                <Form>\n                  <FormGroup>\n                    <Label for=\"exampleText\">Test Name</Label>\n                    <Input\n                      className=\"test-name-class\"\n                      type=\"textarea\"\n                      name=\"test-name\"\n                      placeholder=\"Optional\"\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"exampleText\">Text Description</Label>\n                    <Input\n                      className=\"test-desc-class\"\n                      type=\"textarea\"\n                      name=\"test-desc\"\n                      placeholder=\"Optional\"\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xl={6} lg={12} md={12}>\n            <Card id=\"FormInputs\">\n              <CardHeader>Form Inputs</CardHeader>\n              <CardBody>\n                Layer : <h3 style={{ color: \"red\" }}>{this.state.layer}</h3>\n                <br />\n                Test Type :{\" \"}\n                <h3 style={{ color: \"red\" }}>{this.state.testType}</h3>\n                <br />\n                Test Name :{\" \"}\n                <h3 style={{ color: \"red\" }}>{this.state.testName}</h3>\n                <br />\n                Test Description :{\" \"}\n                <h3 style={{ color: \"red\" }}>{this.state.testDesc}</h3>\n                <br />\n                Target IP : {this.state.targetIP}\n                <br />\n                Protocol : {this.state.protocol}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xl={6} lg={12} md={12}>\n            <Card id=\"BasicConfig\">\n              <CardHeader>Basic Configuration</CardHeader>\n              <CardBody>\n                <InputGroup size=\"normal\">\n                  <InputGroupAddon addonType=\"prepend\">Target</InputGroupAddon>\n                  <Input\n                    className=\"target-class\"\n                    placeholder=\"e.g. google.com or 192.168.0.1\"\n                    onChange={this.handleChange}\n                  />\n                </InputGroup>\n                <br />\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">\n                    Protocol\n                  </InputGroupAddon>\n                  <input\n                    className=\"protocol-class\"\n                    type=\"button\"\n                    value=\"TCP\"\n                    name=\"TCP\"\n                    onClick={this.handleClick}\n                  />\n                  <input\n                    className=\"protocol-class\"\n                    type=\"button\"\n                    value=\"UDP\"\n                    name=\"UDP\"\n                    onClick={this.handleClick}\n                  />\n                  <input\n                    className=\"protocol-class\"\n                    type=\"button\"\n                    value=\"ICMP\"\n                    name=\"ICMP\"\n                    onClick={this.handleClick}\n                  />\n                  <br />\n                  <br />\n                </InputGroup>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FormPage;\n"]},"metadata":{},"sourceType":"module"}