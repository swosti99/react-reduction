{"ast":null,"code":"var _jsxFileName = \"/Users/swosti/Desktop/strapreact/full-form/src/components/form.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, ButtonGroup, InputGroup, InputGroupAddon, DropdownItem, DropdownMenu, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, Label, Row } from \"reactstrap\"; // feature: save test settings in json file\n\nclass FormPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBtnClick = btnInfo => {// const { btnGroupID, btnID } = btnInfo;\n      // const counters = this.state.counters.filter((c) => c.id !== counterID);\n      // this.state.numCounters--;\n      // const numCounters = this.state.numCounters;\n      // this.setState({ numCounters });\n      // this.setState({ counters });\n    };\n\n    this.state = {\n      layer: \"DNS\",\n      testType: \"Agent to Server\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    const className = e.target.className;\n    const inputs = document.querySelectorAll(`.${className}`);\n    console.log(inputs);\n    inputs.forEach(item => {\n      item.style.backgroundColor = \"#FFFFFF\";\n    });\n    e.target.style.backgroundColor = \"blue\";\n\n    if (className === \"layer-class\") {\n      const layer = e.target.value;\n      console.log(layer);\n      this.setState({\n        layer\n      });\n    } else if (className == \"test-type-class\") {\n      const testType = e.target.value;\n      console.log(testType);\n      this.setState({\n        testType\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"NewTest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \"New Test\"), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"new-test-class\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Layer........\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"DNS\",\n      name: \"DNS\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"TCP\",\n      name: \"TCP\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"layer-class\",\n      type: \"button\",\n      value: \"UDP\",\n      name: \"UDP\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), \"Test Type \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"test-type-class\",\n      value: \"Agent to Server\",\n      name: \"Agent-to-Server\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"test-type-class\",\n      type: \"button\",\n      value: \"Agent to Agent\",\n      name: \"Agent-to-Agent\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"Test Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"text\",\n      placeholder: this.state.testType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"Text Description\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"text\",\n      placeholder: this.state.layer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"ViewsEnabledForTest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Form Inputs\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 6,\n      lg: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"BasicConfig\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Basic Configuration\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      size: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, \"Target\"), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"e.g. google.com or 192.168.0.1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, \"Protocol\"), /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DropdownMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }\n    }, \"UDP\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      divider: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(DropdownItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, \"FTP\")))))))));\n  }\n\n}\n\nexport default FormPage;","map":{"version":3,"sources":["/Users/swosti/Desktop/strapreact/full-form/src/components/form.jsx"],"names":["React","Component","Button","ButtonGroup","InputGroup","InputGroupAddon","DropdownItem","DropdownMenu","Card","CardBody","CardHeader","Col","Form","FormGroup","Input","Label","Row","FormPage","constructor","props","handleBtnClick","btnInfo","state","layer","testType","handleClick","bind","e","className","target","inputs","document","querySelectorAll","console","log","forEach","item","style","backgroundColor","value","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,IAPF,EAQEC,QARF,EASEC,UATF,EAUEC,GAVF,EAWEC,IAXF,EAYEC,SAZF,EAaEC,KAbF,EAcEC,KAdF,EAeEC,GAfF,QAgBO,YAhBP,C,CAiBA;;AACA,MAAMC,QAAN,SAAuBhB,SAAvB,CAAiC;AAC/BiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,cAVmB,GAUDC,OAAD,IAAa,CAC5B;AACA;AACA;AACA;AACA;AACA;AACD,KAjBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAWDD,EAAAA,WAAW,CAACE,CAAD,EAAI;AACb,UAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASD,SAA3B;AACA,UAAME,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA2B,IAAGJ,SAAU,EAAxC,CAAf;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAA,IAAAA,MAAM,CAACK,OAAP,CAAgBC,IAAD,IAAU;AACvBA,MAAAA,IAAI,CAACC,KAAL,CAAWC,eAAX,GAA6B,SAA7B;AACD,KAFD;AAGAX,IAAAA,CAAC,CAACE,MAAF,CAASQ,KAAT,CAAeC,eAAf,GAAiC,MAAjC;;AAEA,QAAIV,SAAS,KAAK,aAAlB,EAAiC;AAC/B,YAAML,KAAK,GAAGI,CAAC,CAACE,MAAF,CAASU,KAAvB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,WAAKiB,QAAL,CAAc;AAAEjB,QAAAA;AAAF,OAAd;AACD,KAJD,MAIO,IAAIK,SAAS,IAAI,iBAAjB,EAAoC;AACzC,YAAMJ,QAAQ,GAAGG,CAAC,CAACE,MAAF,CAASU,KAA1B;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACA,WAAKgB,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd;AACD;AACF;;AAEDiB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,EAAhB;AAAoB,MAAA,EAAE,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,eADH,eAEE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,IAAI,EAAC,KAJP;AAKE,MAAA,OAAO,EAAE,KAAKhB,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eASE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,IAAI,EAAC,KAJP;AAKE,MAAA,OAAO,EAAE,KAAKA,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAgBE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,IAAI,EAAC,KAJP;AAKE,MAAA,OAAO,EAAE,KAAKA,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EAyBG,YAzBH,eA0BE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,KAAK,EAAC,iBAHR;AAIE,MAAA,IAAI,EAAC,iBAJP;AAKE,MAAA,OAAO,EAAE,KAAKA,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,eAiCE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,gBAHR;AAIE,MAAA,IAAI,EAAC,gBAJP;AAKE,MAAA,OAAO,EAAE,KAAKA,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,eAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,eAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,eA0CE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAE,KAAKH,KAAL,CAAWE,QAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,KAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,CA1CF,CAFF,CADF,CADF,eAoEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,EAAhB;AAAoB,MAAA,EAAE,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CApEF,CADF,eA6EE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,EAAhB;AAAoB,MAAA,EAAE,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,gCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,YAAD;AAAc,MAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,CAJF,CANF,CAFF,CADF,CADF,CA7EF,CADF;AA0GD;;AAnJ8B;;AAsJjC,eAAeN,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  InputGroup,\n  InputGroupAddon,\n  DropdownItem,\n  DropdownMenu,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\n// feature: save test settings in json file\nclass FormPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layer: \"DNS\",\n      testType: \"Agent to Server\",\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleBtnClick = (btnInfo) => {\n    // const { btnGroupID, btnID } = btnInfo;\n    // const counters = this.state.counters.filter((c) => c.id !== counterID);\n    // this.state.numCounters--;\n    // const numCounters = this.state.numCounters;\n    // this.setState({ numCounters });\n    // this.setState({ counters });\n  };\n\n  handleClick(e) {\n    const className = e.target.className;\n    const inputs = document.querySelectorAll(`.${className}`);\n    console.log(inputs);\n    inputs.forEach((item) => {\n      item.style.backgroundColor = \"#FFFFFF\";\n    });\n    e.target.style.backgroundColor = \"blue\";\n\n    if (className === \"layer-class\") {\n      const layer = e.target.value;\n      console.log(layer);\n      this.setState({ layer });\n    } else if (className == \"test-type-class\") {\n      const testType = e.target.value;\n      console.log(testType);\n      this.setState({ testType });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Row>\n          <Col xl={6} lg={12} md={12}>\n            <Card id=\"NewTest\">\n              <CardHeader>New Test</CardHeader>\n              <CardBody className=\"new-test-class\">\n                {\"Layer........\"}\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"DNS\"\n                  name=\"DNS\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"TCP\"\n                  name=\"TCP\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"layer-class\"\n                  type=\"button\"\n                  value=\"UDP\"\n                  name=\"UDP\"\n                  onClick={this.handleClick}\n                />\n                <br />\n                <br />\n                {\"Test Type \"}\n                <input\n                  type=\"button\"\n                  className=\"test-type-class\"\n                  value=\"Agent to Server\"\n                  name=\"Agent-to-Server\"\n                  onClick={this.handleClick}\n                />\n                <input\n                  className=\"test-type-class\"\n                  type=\"button\"\n                  value=\"Agent to Agent\"\n                  name=\"Agent-to-Agent\"\n                  onClick={this.handleClick}\n                />\n                <br />\n                <br />\n                <Form>\n                  <FormGroup>\n                    <Label for=\"exampleText\">Test Name</Label>\n                    <Input\n                      type=\"textarea\"\n                      name=\"text\"\n                      placeholder={this.state.testType}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"exampleText\">Text Description</Label>\n                    <Input\n                      type=\"textarea\"\n                      name=\"text\"\n                      placeholder={this.state.layer}\n                    />\n                  </FormGroup>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xl={6} lg={12} md={12}>\n            <Card id=\"ViewsEnabledForTest\">\n              <CardHeader>Form Inputs</CardHeader>\n              <CardBody></CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xl={6} lg={12} md={12}>\n            <Card id=\"BasicConfig\">\n              <CardHeader>Basic Configuration</CardHeader>\n              <CardBody>\n                <InputGroup size=\"normal\">\n                  <InputGroupAddon addonType=\"prepend\">Target</InputGroupAddon>\n                  <Input placeholder=\"e.g. google.com or 192.168.0.1\" />\n                </InputGroup>\n                <br />\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">\n                    Protocol\n                  </InputGroupAddon>\n                  <Input>\n                    <DropdownMenu>\n                      <DropdownItem>UDP</DropdownItem>\n                      <DropdownItem divider />\n                      <DropdownItem>FTP</DropdownItem>\n                    </DropdownMenu>\n                  </Input>\n                </InputGroup>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FormPage;\n"]},"metadata":{},"sourceType":"module"}